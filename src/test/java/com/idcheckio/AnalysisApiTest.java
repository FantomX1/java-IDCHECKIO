/**
 * IdCheck.IO API
 * Check identity documents
 *
 * OpenAPI spec version: 0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.idcheckio;

import com.ApiException;
import io.swagger.client.model.ErrorResponse;
import io.swagger.client.model.ReportResponse;
import io.swagger.client.model.ResultResponse;
import io.swagger.client.model.TaskResponse;
import io.swagger.client.model.ImageRequest;
import io.swagger.client.model.MrzRequest;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AnalysisApi
 */
public class AnalysisApiTest {

    private final AnalysisApi api = new AnalysisApi();

    
    /**
     * HTTP GET report (demo)
     *
     * Get a pdf report (base64 encoded) (demo)
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getReportTest() throws ApiException {
        String analysisRefUid = null;
        String authorization = null;
        String acceptLanguage = null;
        // ReportResponse response = api.getReport(analysisRefUid, authorization, acceptLanguage);

        // TODO: test validations
    }
    
    /**
     * HTTP GET result
     *
     * Get result controls
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getResultTest() throws ApiException {
        String analysisRefUid = null;
        String authorization = null;
        String acceptLanguage = null;
        Boolean rectoImageCropped = null;
        Boolean faceImageCropped = null;
        Boolean signatureImageCropped = null;
        // ResultResponse response = api.getResult(analysisRefUid, authorization, acceptLanguage, rectoImageCropped, faceImageCropped, signatureImageCropped);

        // TODO: test validations
    }
    
    /**
     * HTTP GET task
     *
     * Get task status
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTaskTest() throws ApiException {
        String analysisRefUid = null;
        String authorization = null;
        String acceptLanguage = null;
        Long wait = null;
        // TaskResponse response = api.getTask(analysisRefUid, authorization, acceptLanguage, wait);

        // TODO: test validations
    }
    
    /**
     * HTTP POST task image
     *
     * POST an image check task
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postImageTest() throws ApiException {
        ImageRequest body = null;
        String authorization = null;
        Boolean asyncMode = null;
        String acceptLanguage = null;
        // ResultResponse response = api.postImage(body, authorization, asyncMode, acceptLanguage);

        // TODO: test validations
    }
    
    /**
     * HTTP POST task mrz
     *
     * POST a mrz check task
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postMrzTest() throws ApiException {
        MrzRequest body = null;
        String authorization = null;
        Boolean asyncMode = null;
        String acceptLanguage = null;
        // ResultResponse response = api.postMrz(body, authorization, asyncMode, acceptLanguage);

        // TODO: test validations
    }
    
}
