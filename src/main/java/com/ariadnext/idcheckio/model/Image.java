/**
 * IdCheck.IO API
 * Check identity documents
 *
 * OpenAPI spec version: 0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package com.ariadnext.idcheckio.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


/**
 * Image
 */

public class Image   {
  /**
   * Gets or Sets doc
   */
  public enum DocEnum {
    @SerializedName("CNI_BE_SPECIMEN")
    CNI_BE_SPECIMEN("CNI_BE_SPECIMEN"),
    
    @SerializedName("CNI_BE_SPECIMEN_MRZ")
    CNI_BE_SPECIMEN_MRZ("CNI_BE_SPECIMEN_MRZ"),
    
    @SerializedName("PASSEPORT_FR_SPECIMEN_NATACHA")
    PASSEPORT_FR_SPECIMEN_NATACHA("PASSEPORT_FR_SPECIMEN_NATACHA"),
    
    @SerializedName("PASSEPORT_FR_SPECIMEN_NATACHA_MRZ")
    PASSEPORT_FR_SPECIMEN_NATACHA_MRZ("PASSEPORT_FR_SPECIMEN_NATACHA_MRZ"),
    
    @SerializedName("CNI_FR_SPECIMEN_BERTHIER")
    CNI_FR_SPECIMEN_BERTHIER("CNI_FR_SPECIMEN_BERTHIER"),
    
    @SerializedName("CNI_FR_SPECIMEN_BERTHIER_MRZ")
    CNI_FR_SPECIMEN_BERTHIER_MRZ("CNI_FR_SPECIMEN_BERTHIER_MRZ"),
    
    @SerializedName("PASSEPORT_FR_SPECIMEN_GRAUX_MRZ")
    PASSEPORT_FR_SPECIMEN_GRAUX_MRZ("PASSEPORT_FR_SPECIMEN_GRAUX_MRZ"),
    
    @SerializedName("PASSEPORT_FR_SPECIMEN_GRAUX")
    PASSEPORT_FR_SPECIMEN_GRAUX("PASSEPORT_FR_SPECIMEN_GRAUX"),
    
    @SerializedName("CNI_BIH_SPECIMEN")
    CNI_BIH_SPECIMEN("CNI_BIH_SPECIMEN"),
    
    @SerializedName("CNI_BIH_SPECIMEN_MRZ")
    CNI_BIH_SPECIMEN_MRZ("CNI_BIH_SPECIMEN_MRZ"),
    
    @SerializedName("PASSEPORT_USA_FALSIFIE_TRAVELER")
    PASSEPORT_USA_FALSIFIE_TRAVELER("PASSEPORT_USA_FALSIFIE_TRAVELER"),
    
    @SerializedName("PASSEPORT_USA_FALSIFIE_TRAVELER_MRZ")
    PASSEPORT_USA_FALSIFIE_TRAVELER_MRZ("PASSEPORT_USA_FALSIFIE_TRAVELER_MRZ"),
    
    @SerializedName("RP_FR_SPECIMEN_MARTIN")
    RP_FR_SPECIMEN_MARTIN("RP_FR_SPECIMEN_MARTIN"),
    
    @SerializedName("RP_FR_SPECIMEN_MARTIN_MRZ")
    RP_FR_SPECIMEN_MARTIN_MRZ("RP_FR_SPECIMEN_MARTIN_MRZ"),
    
    @SerializedName("CNI_GBR_SPECIMEN_FREEMAN")
    CNI_GBR_SPECIMEN_FREEMAN("CNI_GBR_SPECIMEN_FREEMAN"),
    
    @SerializedName("CNI_GBR_SPECIMEN_FREEMAN_MRZ")
    CNI_GBR_SPECIMEN_FREEMAN_MRZ("CNI_GBR_SPECIMEN_FREEMAN_MRZ"),
    
    @SerializedName("PASSEPORT_CHN_SPECIMEN_ZHENGJIAN")
    PASSEPORT_CHN_SPECIMEN_ZHENGJIAN("PASSEPORT_CHN_SPECIMEN_ZHENGJIAN"),
    
    @SerializedName("PASSEPORT_CHN_SPECIMEN_ZHENGJIAN_MRZ")
    PASSEPORT_CHN_SPECIMEN_ZHENGJIAN_MRZ("PASSEPORT_CHN_SPECIMEN_ZHENGJIAN_MRZ"),
    
    @SerializedName("PASSEPORT_ITA_SPECIMEN_ROSSI")
    PASSEPORT_ITA_SPECIMEN_ROSSI("PASSEPORT_ITA_SPECIMEN_ROSSI"),
    
    @SerializedName("PASSEPORT_ITA_SPECIMEN_ROSSI_MRZ")
    PASSEPORT_ITA_SPECIMEN_ROSSI_MRZ("PASSEPORT_ITA_SPECIMEN_ROSSI_MRZ"),
    
    @SerializedName("RP_GBR_SPECIMEN_IVANOVA")
    RP_GBR_SPECIMEN_IVANOVA("RP_GBR_SPECIMEN_IVANOVA"),
    
    @SerializedName("RP_GBR_SPECIMEN_IVANOVA_MRZ")
    RP_GBR_SPECIMEN_IVANOVA_MRZ("RP_GBR_SPECIMEN_IVANOVA_MRZ"),
    
    @SerializedName("DL_FR_SPECIMEN_MARTIN")
    DL_FR_SPECIMEN_MARTIN("DL_FR_SPECIMEN_MARTIN"),
    
    @SerializedName("DL_FR_SPECIMEN_MARTIN_MRZ")
    DL_FR_SPECIMEN_MARTIN_MRZ("DL_FR_SPECIMEN_MARTIN_MRZ"),
    
    @SerializedName("ELECTRICITE_FR_BERTHIER")
    ELECTRICITE_FR_BERTHIER("ELECTRICITE_FR_BERTHIER"),
    
    @SerializedName("IMPOSITION_FR_BERTHIER")
    IMPOSITION_FR_BERTHIER("IMPOSITION_FR_BERTHIER"),
    
    @SerializedName("RIB_FR_BERTHIER")
    RIB_FR_BERTHIER("RIB_FR_BERTHIER"),
    
    @SerializedName("TELEPHONE_2DDOC_BERTHIER")
    TELEPHONE_2DDOC_BERTHIER("TELEPHONE_2DDOC_BERTHIER"),
    
    @SerializedName("CARTE_GRISE_DUPONT")
    CARTE_GRISE_DUPONT("CARTE_GRISE_DUPONT"),
    
    @SerializedName("SALAIRE_FR_BERTHIER")
    SALAIRE_FR_BERTHIER("SALAIRE_FR_BERTHIER");

    private String value;

    DocEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("doc")
  private DocEnum doc = null;

  /**
   * Gets or Sets face
   */
  public enum FaceEnum {
    @SerializedName("RECTO")
    RECTO("RECTO"),
    
    @SerializedName("VERSO")
    VERSO("VERSO");

    private String value;

    FaceEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("face")
  private FaceEnum face = null;

  /**
   * Gets or Sets rawType
   */
  public enum RawTypeEnum {
    @SerializedName("BASE64")
    BASE64("BASE64"),
    
    @SerializedName("JPG")
    JPG("JPG");

    private String value;

    RawTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("rawType")
  private RawTypeEnum rawType = null;

  /**
   * Gets or Sets light
   */
  public enum LightEnum {
    @SerializedName("DL")
    DL("DL"),
    
    @SerializedName("IR")
    IR("IR"),
    
    @SerializedName("UV")
    UV("UV");

    private String value;

    LightEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("light")
  private LightEnum light = null;

  public Image doc(DocEnum doc) {
    this.doc = doc;
    return this;
  }

   /**
   * Get doc
   * @return doc
  **/
  @ApiModelProperty(example = "null", value = "")
  public DocEnum getDoc() {
    return doc;
  }

  public void setDoc(DocEnum doc) {
    this.doc = doc;
  }

  public Image face(FaceEnum face) {
    this.face = face;
    return this;
  }

   /**
   * Get face
   * @return face
  **/
  @ApiModelProperty(example = "null", value = "")
  public FaceEnum getFace() {
    return face;
  }

  public void setFace(FaceEnum face) {
    this.face = face;
  }

  public Image rawType(RawTypeEnum rawType) {
    this.rawType = rawType;
    return this;
  }

   /**
   * Get rawType
   * @return rawType
  **/
  @ApiModelProperty(example = "null", value = "")
  public RawTypeEnum getRawType() {
    return rawType;
  }

  public void setRawType(RawTypeEnum rawType) {
    this.rawType = rawType;
  }

  public Image light(LightEnum light) {
    this.light = light;
    return this;
  }

   /**
   * Get light
   * @return light
  **/
  @ApiModelProperty(example = "null", value = "")
  public LightEnum getLight() {
    return light;
  }

  public void setLight(LightEnum light) {
    this.light = light;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Image image = (Image) o;
    return Objects.equals(this.doc, image.doc) &&
        Objects.equals(this.face, image.face) &&
        Objects.equals(this.rawType, image.rawType) &&
        Objects.equals(this.light, image.light);
  }

  @Override
  public int hashCode() {
    return Objects.hash(doc, face, rawType, light);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Image {\n");
    
    sb.append("    doc: ").append(toIndentedString(doc)).append("\n");
    sb.append("    face: ").append(toIndentedString(face)).append("\n");
    sb.append("    rawType: ").append(toIndentedString(rawType)).append("\n");
    sb.append("    light: ").append(toIndentedString(light)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

